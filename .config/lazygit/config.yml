gui:
  switchTabsWithPanelJumpKeys: true
  expandFocusedSidePanel: false
  nerdFontsVersion: "3"
  border: single
customCommands:
  # Uses GitMoji on git commit
  - command: "git commit -m '{{ .Form.emoji }} {{ .Form.message }}'"
    context: "files"
    description: Commit changes using gitmojis
    key: C
    prompts:
      - command: gitmoji -l
        filter: ^(.*?) - (:.*?:) - (.*)$
        key: emoji
        labelFormat: "{{ .group_1 }} - {{ .group_3 }}"
        title: "Select a gitmoji:"
        type: menuFromCommand
        valueFormat: "{{ .group_2 }}"
      - key: message
        title: "Enter a commit message:"
        type: input
  # Uses `CTRL + f` to clean all local branches that no longer have a remote tracking
  - key: "<c-f>"
    context: "localBranches"
    command: "git fetch --prune && git branch -vv | awk '/: gone]/{print $1}' | xargs git branch -d"
    loadingText: "Cleaning branches"
    prompts:
      - type: "confirm"
        title: "Clean branches"
        body: "Are you sure you want to delete untracked origin branches?"
  # Uses `n` to create a new branch by type
  - key: "n"
    context: "localBranches"
    prompts:
      - type: "menu"
        title: "What kind of branch is it?"
        key: "BranchType"
        options:
          - name: "feature"
            description: "a feature branch"
            value: "feature"
          - name: "fix"
            description: "a hotfix branch"
            value: "fix"
      - type: "input"
        title: "What is the new branch name?"
        key: "BranchName"
        initialValue: ""
    command: "git checkout -b {{.Form.BranchType}}/{{.Form.BranchName}}"
    loadingText: "Creating branch"
